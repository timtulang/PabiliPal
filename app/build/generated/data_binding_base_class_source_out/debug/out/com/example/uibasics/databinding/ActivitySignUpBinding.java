// Generated by view binder compiler. Do not edit!
package com.example.uibasics.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uibasics.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView loginRedirectText;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Spinner roleSpinner;

  @NonNull
  public final Button signupButton;

  @NonNull
  public final EditText signupConfirm;

  @NonNull
  public final EditText signupPassword;

  @NonNull
  public final EditText signupUser;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView loginRedirectText, @NonNull ConstraintLayout main,
      @NonNull Spinner roleSpinner, @NonNull Button signupButton, @NonNull EditText signupConfirm,
      @NonNull EditText signupPassword, @NonNull EditText signupUser) {
    this.rootView = rootView;
    this.loginRedirectText = loginRedirectText;
    this.main = main;
    this.roleSpinner = roleSpinner;
    this.signupButton = signupButton;
    this.signupConfirm = signupConfirm;
    this.signupPassword = signupPassword;
    this.signupUser = signupUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loginRedirectText;
      TextView loginRedirectText = ViewBindings.findChildViewById(rootView, id);
      if (loginRedirectText == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.role_spinner;
      Spinner roleSpinner = ViewBindings.findChildViewById(rootView, id);
      if (roleSpinner == null) {
        break missingId;
      }

      id = R.id.signup_button;
      Button signupButton = ViewBindings.findChildViewById(rootView, id);
      if (signupButton == null) {
        break missingId;
      }

      id = R.id.signup_confirm;
      EditText signupConfirm = ViewBindings.findChildViewById(rootView, id);
      if (signupConfirm == null) {
        break missingId;
      }

      id = R.id.signup_password;
      EditText signupPassword = ViewBindings.findChildViewById(rootView, id);
      if (signupPassword == null) {
        break missingId;
      }

      id = R.id.signup_user;
      EditText signupUser = ViewBindings.findChildViewById(rootView, id);
      if (signupUser == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, loginRedirectText, main,
          roleSpinner, signupButton, signupConfirm, signupPassword, signupUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
